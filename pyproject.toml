[project]
name = "kali-mcp-server"
version = "0.1.0"
description = "A Kali Linux MCP server providing AI assistants with access to security tools"
readme = "README.md"
requires-python = ">=3.10"
authors = [{ name = "Anthropic, PBC." }]
maintainers = [
    { name = "David Soria Parra", email = "davidsp@anthropic.com" },
    { name = "Justin Spahr-Summers", email = "justin@anthropic.com" },
]
keywords = ["kali", "security", "pentest", "mcp", "llm", "ai", "automation"]
license = { text = "MIT" }
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Topic :: Security",
]
dependencies = [
    "anyio>=4.5",
    "click>=8.1.0",
    "httpx>=0.27",
    "mcp[cli]",
    "starlette",
    "uvicorn",
]

[project.scripts]
kali-mcp-server = "kali_mcp_server.server:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["kali_mcp_server"]

[tool.pyright]
include = ["kali_mcp_server"]
venvPath = "."
venv = ".venv"

[tool.ruff.lint]
select = ["E", "F", "I"]
ignore = []

[tool.ruff]
line-length = 88
target-version = "py310"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"

[tool.uv]
dev-dependencies = [
    "pyright>=1.1.378", 
    "pytest>=8.3.3", 
    "ruff>=0.6.9",
    "black>=24.0.0"
]